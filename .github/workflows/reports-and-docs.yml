name: Deploy reports & documentation to GitHub Pages

on:
  workflow_dispatch:

  schedule:
    - cron: "30 1 * * *"     # Runs at 2:00 AM UTC daily

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: "${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}"
          restore-keys: ${{ runner.os }}-m2
      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Maven Build
        id: maven-build
        shell: bash
        run: |
          PROJECT_VERSION=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout | tail -n 1)
          RELEASE_VERSION=$(echo $PROJECT_VERSION | sed 's/-SNAPSHOT//')
          echo "project_version=$PROJECT_VERSION" >> $GITHUB_OUTPUT
          echo "project_version=$PROJECT_VERSION"
          echo "version=$RELEASE_VERSION" >> $GITHUB_OUTPUT
          echo "version=$RELEASE_VERSION"
          #./mvnw -Psonatype-oss-release install javadoc:javadoc versions:dependency-updates-aggregate-report versions:plugin-updates-aggregate-report -Dsave=true -Ddisplay=false io.github.orhankupusoglu:sloc-maven-plugin:sloc -Dbuildplan.appendOutput=true -Dbuildplan.outputFile=/workspaces/operaton/target/reports/buildplan.txt fr.jcgay.maven.plugins:buildplan-maven-plugin:list -DskipTests
          ./mvnw versions:dependency-updates-aggregate-report versions:plugin-updates-aggregate-report
          .devenv/scripts/build/javadoc.sh
          .devenv/scripts/build/check-api-compatibility.sh
      - name: Cache build artifacts
        uses: actions/cache/save@v4
        with:
          path: |
            **/target/reports/**
            **/target/javadoc/**
          key: ${{ github.run_id }}-build-artifacts

  deploy:
    # allowed to deploy only from 'main' to github-pages due to environment protection rules
    if: github.ref == 'refs/heads/main'
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Restore build artifacts cache
        uses: actions/cache@v4
        with:
          path: |
            **/target/reports/**
            **/target/javadoc/**
          key: ${{ github.run_id }}-build-artifacts
          fail-on-cache-miss: true
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: 'target'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
