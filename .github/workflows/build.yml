# This workflow builds Operaton, and cache/restore any dependencies to improve the workflow execution time
name: build

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '.github/workflows/**'
      - '!.github/workflows/build.yml'
      - '**/*.md'
      - 'distro/**'
      - 'settings/**'
      - '.gitingore'
      - 'LICENSE'
      - 'NOTICE'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - '.github/workflows/**'
      - '!.github/workflows/build.yml'
      - '**/*.md'
      - 'distro/**'
      - 'settings/**'
      - '.gitingore'
      - 'LICENSE'
      - 'NOTICE'

permissions:
  contents: read
  checks: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    strategy:
      fail-fast: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Maven Build
        id: maven-build
        shell: bash
        run: |
          .github/scripts/jacoco-create-marker-files.sh
          ./mvnw verify
      - name: Sonarqube Analysis
        if: github.repository == 'operaton/operaton' && (github.ref == 'refs/heads/main' || github.event_name == 'pull_request')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: bash
        run: |
          ./mvnw -Dsonar.projectKey=operaton_operaton org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
        continue-on-error: true
      - name: Upload Build Artifacts
        id: upload-build-artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-artifacts
          path: |
            **/jacoco.xml
            **/jacoco.exec
            **/target/surefire-reports/*.xml
          retention-days: 30
      - name: Upload Distros
        id: upload-distros
        uses: actions/upload-artifact@v4
        with:
          name: distros
          path: |
            distro/*/assembly/target/*.gz

  #  static_analysis:
  #    name: Static Analysis
  #    needs: build
  #    runs-on: ubuntu-latest
  #    if: github.repository == 'operaton/operaton' && (github.ref == 'refs/heads/main' || github.event_name == 'pull_request')
  #    steps:
  #      - uses: actions/checkout@v4
  #        with:
  #          fetch-depth: 0
  #      - name: Set up JDK 17
  #        uses: actions/setup-java@v4
  #        with:
  #          java-version: '17'
  #          distribution: 'temurin'
  #          cache: maven
  #      - name: Download Artifacts
  #        uses: actions/download-artifact@v4
  #        with:
  #          name: build-artifacts
  #      - name: Cache SonarCloud packages
  #        uses: actions/cache@v4
  #        with:
  #          path: ~/.sonar/cache
  #          key: ${{ runner.os }}-sonar
  #          restore-keys: ${{ runner.os }}-sonar
  #      - name: Sonarqube Analysis
  #        env:
  #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #        shell: bash
  #        run: |
  #          .github/scripts/jacoco-collect-exec.sh
  #          ./mvnw -N -Psonar -Dsonar.projectKey=operaton_operaton jacoco:merge jacoco:report-aggregate org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
  #        continue-on-error: true

  publish:
    name: Publish
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
      - name: Publish Test Report
        if: always()
        #https://github.com/marketplace/actions/junit-report-action
        uses: mikepenz/action-junit-report@v4
        with:
          report_paths: "**/target/surefire-reports/*.xml"
          require_passed_tests: true
