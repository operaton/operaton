<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>operaton-qa-wildfly-runtime</artifactId>
  <packaging>jar</packaging>

  <name>Operaton - QA Wildfly Test Runtime</name>

  <parent>
    <groupId>org.operaton.bpm.qa</groupId>
    <artifactId>operaton-qa</artifactId>
    <version>1.0.0-beta-3-SNAPSHOT</version>
  </parent>


  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${version.spring.framework6}</version>
      </dependency>
      <dependency>
        <groupId>org.operaton.bpm</groupId>
        <artifactId>operaton-engine</artifactId>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!--
      database drivers
      we deploy all and only activate one with a *-ds.xml database deployment
    -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.python</groupId>
      <artifactId>jython</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.jruby</groupId>
      <artifactId>jruby-complete</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.operaton.bpm.qa</groupId>
      <artifactId>operaton-qa-ensure-clean-db</artifactId>
      <version>${project.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <artifactId>spring-beans</artifactId>
      <groupId>org.springframework</groupId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/common/standalone/</directory>
        <filtering>true</filtering>
        <includes>
          <include>deployments/${jboss.datasource.filename}</include>
        </includes>
      </resource>
      <!-- server specific -->
      <resource>
        <directory>src/main/wildfly/standalone</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*.xml</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/wildfly/domain</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*.xml</include>
        </includes>
      </resource>
    </resources>
    <plugins>
      <!-- create sources to be used by operaton -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-resources</id>
            <phase>verify</phase>
            <goals>
              <goal>add-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>src/main</directory>
                  <includes>
                    <include>**/*.xml</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
            <configuration>
              <forceCreation>true</forceCreation>
              <!-- exclude otherwise there would be duplicates in -sources.jar -->
              <excludes>
                <exclude>deployments/**/*</exclude>
                <exclude>configuration/**/*</exclude>
                <exclude>**/configuration/**/*</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <failIfNoTests>false</failIfNoTests>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>

    <profile>
      <id>wildfly</id>
      <dependencies>
        <dependency>
          <!-- make sure it comes after assembly in the build -->
          <groupId>org.operaton.bpm.wildfly</groupId>
          <artifactId>operaton-wildfly-assembly</artifactId>
          <version>${project.version}</version>
          <type>pom</type>
          <scope>test</scope>
        </dependency>
      </dependencies>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-server</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <inherited>false</inherited>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.operaton.bpm.wildfly</groupId>
                      <artifactId>operaton-wildfly-assembly</artifactId>
                      <version>${project.version}</version>
                      <type>tar.gz</type>
                      <overWrite>true</overWrite>
                      <outputDirectory>target/</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <configuration>
              <delimiters>
                <delimiter>${*}</delimiter>
              </delimiters>
              <useDefaultDelimiters>false</useDefaultDelimiters>
            </configuration>
            <executions>
              <execution>
                <id>copy-filtered-main-resources</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>resources</goal>
                </goals>
                <configuration>
                  <overwrite>true</overwrite>
                  <outputDirectory>${wildfly.runtime.location}/standalone</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-distro</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target unless="maven.test.skip">
                    <copy todir="${wildfly.runtime.location}/modules" overwrite="true">
                      <fileset dir="src/main/common/modules" />
                    </copy>
                  </target>
                </configuration>
              </execution>
              <execution>
                <id>copy-test-dependencies</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target unless="maven.test.skip">
                    <dependencyfilesets scopes="runtime" />

                    <!-- copy modules -->
                    <copy todir="${wildfly.runtime.location}/modules" flatten="false" overwrite="true">
                      <fileset refid="maven.project.dependencies" />
                      <regexpmapper from="^(.*)/([^/]+)/([^/]*)$$" to="\1/main/\3" handledirsep="yes" />
                    </copy>

                    <delete>
                      <fileset dir="${wildfly.runtime.location}/modules/org/operaton/bpm/qa" includes="**/*.jar" />
                    </delete>
                    <!-- copy all files again, but this only matches fox files and this treatment makes is maven 2/3 compatible => timestamped snapshot -->
                    <copy todir="${wildfly.runtime.location}/modules" flatten="false" verbose="true">
                      <fileset refid="maven.project.dependencies" />
                      <mapper>
                        <chainedmapper>
                          <regexpmapper from="^(.*)/([^/]+)/([^/]*)$$" to="\1/main/\3" handledirsep="yes" />
                          <regexpmapper from="^(org.operaton.bpm.qa.*)/((operaton-[A-Za-z-]*)[0-9\.]*).*.jar$$" to="\1/\3${project.version}.jar" handledirsep="yes" />
                        </chainedmapper>
                      </mapper>
                    </copy>

                    <!-- replace database versions -->
                    <replace dir="${wildfly.runtime.location}/modules">
                      <include name="**/module.xml" />
                      <replacefilter token="@project.version@" value="${project.version}" />
                      <replacefilter token="@version.postgresql@" value="${version.postgresql}" />
                    </replace>

                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>wildfly-domain</id>

      <dependencies>
        <dependency>
          <!-- make sure it comes after assembly in the build -->
          <groupId>org.operaton.bpm.wildfly</groupId>
          <artifactId>operaton-wildfly-assembly</artifactId>
          <version>${project.version}</version>
          <type>pom</type>
          <scope>test</scope>
        </dependency>
      </dependencies>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-server</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <inherited>false</inherited>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.operaton.bpm.wildfly</groupId>
                      <artifactId>operaton-wildfly-assembly</artifactId>
                      <version>${project.version}</version>
                      <type>tar.gz</type>
                      <overWrite>true</overWrite>
                      <outputDirectory>target/</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <configuration>
              <delimiters>
                <delimiter>${*}</delimiter>
              </delimiters>
              <useDefaultDelimiters>false</useDefaultDelimiters>
            </configuration>
            <executions>
              <execution>
                <id>copy-filtered-main-resources</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>resources</goal>
                </goals>
                <configuration>
                  <overwrite>true</overwrite>
                  <outputDirectory>${wildfly.runtime.location}/domain</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-distro</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target unless="maven.test.skip">
                    <copy todir="${wildfly.runtime.location}/modules" overwrite="true">
                      <fileset dir="src/main/common/modules" />
                    </copy>
                  </target>
                </configuration>
              </execution>
              <execution>
                <id>copy-test-dependencies</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target unless="maven.test.skip">
                    <dependencyfilesets scopes="runtime" />

                    <!-- copy modules -->
                    <copy todir="${wildfly.runtime.location}/modules" flatten="false" overwrite="true">
                      <fileset refid="maven.project.dependencies" />
                      <regexpmapper from="^(.*)/([^/]+)/([^/]*)$$" to="\1/main/\3" handledirsep="yes" />
                    </copy>

                    <delete>
                      <fileset dir="${wildfly.runtime.location}/modules/org/operaton/bpm/qa" includes="**/*.jar" />
                    </delete>
                    <!-- copy all files again, but this only matches fox files and this treatment makes is maven 2/3 compatible => timestamped snapshot -->
                    <copy todir="${wildfly.runtime.location}/modules" flatten="false" verbose="true">
                      <fileset refid="maven.project.dependencies" />
                      <mapper>
                        <chainedmapper>
                          <regexpmapper from="^(.*)/([^/]+)/([^/]*)$$" to="\1/main/\3" handledirsep="yes" />
                          <regexpmapper from="^(org.operaton.bpm.qa.*)/((operaton-[A-Za-z-]*)[0-9\.]*).*.jar$$" to="\1/\3${project.version}.jar" handledirsep="yes" />
                        </chainedmapper>
                      </mapper>
                    </copy>

                    <!-- replace database versions -->
                    <replace dir="${wildfly.runtime.location}/modules">
                      <include name="**/module.xml" />
                      <replacefilter token="@project.version@" value="${project.version}" />
                      <replacefilter token="@version.postgresql@" value="${version.postgresql}" />
                    </replace>

                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <description>${project.name}</description>
</project>