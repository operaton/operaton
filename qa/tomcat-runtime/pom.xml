<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>operaton-qa-tomcat-runtime</artifactId>
  <packaging>pom</packaging>

  <name>Operaton - QA Tomcat Test Runtime</name>

  <parent>
    <groupId>org.operaton.bpm.qa</groupId>
    <artifactId>operaton-qa</artifactId>
    <version>1.0.0-beta-5-SNAPSHOT</version>
  </parent>

  <properties>
    <version.asm>9.8</version.asm>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.operaton.bpm</groupId>
        <artifactId>operaton-core-internal-dependencies</artifactId>
        <version>${project.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <!--
        Make sure it comes after assembly in the build.
        Leave scope test, otherwise libs from pom will be copied into Tomcat's lib folder
      -->
      <groupId>org.operaton.bpm.tomcat</groupId>
      <artifactId>operaton-tomcat-assembly</artifactId>
      <version>${project.version}</version>
      <type>pom</type>
      <scope>test</scope>
    </dependency>

    <!--
      database drivers
      we deploy all and only activate one through server.xml
    -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.mariadb.jdbc</groupId>
      <artifactId>mariadb-java-client</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!--
    Testcontainers are needed in the Tomcat container for Arquillian tests, so the instance is able to
    spin up containers via the jdbc:tc:.. JDBC connection.
    -->
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>jdbc</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>mariadb</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.operaton.bpm</groupId>
      <artifactId>operaton-test-utils-testcontainers</artifactId>
      <version>1.0.0-beta-5-SNAPSHOT</version>
      <scope>runtime</scope>
    </dependency>


    <dependency>
      <groupId>org.python</groupId>
      <artifactId>jython</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.jruby</groupId>
      <artifactId>jruby-complete</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jdk14</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.operaton.bpm.qa</groupId>
      <artifactId>operaton-qa-ensure-clean-db</artifactId>
      <version>${project.version}</version>
      <scope>runtime</scope>
    </dependency>

  </dependencies>

  <profiles>
    <profile>
      <id>tomcat</id>
      <build>
        <resources>
          <resource>
            <directory>src/main</directory>
            <filtering>true</filtering>
          </resource>
        </resources>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-server</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <inherited>false</inherited>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.operaton.bpm.tomcat</groupId>
                      <artifactId>operaton-tomcat-assembly</artifactId>
                      <version>${project.version}</version>
                      <type>tar.gz</type>
                      <overWrite>true</overWrite>
                      <outputDirectory>target/</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
              <execution>
                <id>copy-libs</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <inherited>false</inherited>
                <configuration>
                  <includeScope>runtime</includeScope>
                  <outputDirectory>target/server/apache-tomcat-${version.tomcat}/lib</outputDirectory>
                </configuration>
              </execution>
              <execution>
                <id>copy-additional-libs</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>copy</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.jboss.weld.servlet</groupId>
                      <artifactId>weld-servlet-shaded</artifactId>
                      <version>6.0.0.Final</version>
                      <outputDirectory>target/server/apache-tomcat-${version.tomcat}/lib</outputDirectory>
                    </artifactItem>
                    <artifactItem>
                      <groupId>io.smallrye</groupId>
                      <artifactId>jandex</artifactId>
                      <version>3.2.7</version>
                      <outputDirectory>target/server/apache-tomcat-${version.tomcat}/lib</outputDirectory>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.assertj</groupId>
                      <artifactId>assertj-core</artifactId>
                      <version>${version.assertj}</version>
                      <outputDirectory>target/server/apache-tomcat-${version.tomcat}/lib</outputDirectory>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.openjdk.nashorn</groupId>
                      <artifactId>nashorn-core</artifactId>
                      <version>${version.nashorn}</version>
                      <outputDirectory>target/server/apache-tomcat-${version.tomcat}/lib</outputDirectory>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.ow2.asm</groupId>
                      <artifactId>asm</artifactId>
                      <version>${version.asm}</version>
                      <outputDirectory>target/server/apache-tomcat-${version.tomcat}/lib</outputDirectory>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.ow2.asm</groupId>
                      <artifactId>asm-commons</artifactId>
                      <version>${version.asm}</version>
                      <outputDirectory>target/server/apache-tomcat-${version.tomcat}/lib</outputDirectory>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.ow2.asm</groupId>
                      <artifactId>asm-tree</artifactId>
                      <version>${version.asm}</version>
                      <outputDirectory>target/server/apache-tomcat-${version.tomcat}/lib</outputDirectory>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.ow2.asm</groupId>
                      <artifactId>asm-util</artifactId>
                      <version>${version.asm}</version>
                      <outputDirectory>target/server/apache-tomcat-${version.tomcat}/lib</outputDirectory>
                    </artifactItem>
                    <!-- JNA is needed for the testcontainers to work -->
                    <artifactItem>
                      <groupId>net.java.dev.jna</groupId>
                      <artifactId>jna</artifactId>
                      <version>${version.jna}</version>
                      <outputDirectory>target/server/apache-tomcat-${version.tomcat}/lib</outputDirectory>
                    </artifactItem>
                    <artifactItem>
                      <groupId>net.java.dev.jna</groupId>
                      <artifactId>jna-platform</artifactId>
                      <version>${version.jna}</version>
                      <outputDirectory>target/server/apache-tomcat-${version.tomcat}/lib</outputDirectory>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.testcontainers</groupId>
                      <artifactId>testcontainers</artifactId>
                      <version>${version.testcontainers}</version>
                      <outputDirectory>target/server/apache-tomcat-${version.tomcat}/lib</outputDirectory>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.testcontainers</groupId>
                      <artifactId>jdbc</artifactId>
                      <version>${version.testcontainers}</version>
                      <outputDirectory>target/server/apache-tomcat-${version.tomcat}/lib</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- copy filtered configuration resources -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <configuration>
              <delimiters>
                <delimiter>${*}</delimiter>
              </delimiters>
              <useDefaultDelimiters>false</useDefaultDelimiters>
            </configuration>
            <executions>
              <execution>
                <id>copy-resources</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>resources</goal>
                </goals>
                <configuration>
                  <overwrite>true</overwrite>
                  <outputDirectory>target/server/apache-tomcat-${version.tomcat}</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- remove unneeded webapps -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <goals>
              <goal>run</goal>
            </goals>
            <executions>
              <execution>
                <id>clean-webapps</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <delete dir="target/server/apache-tomcat-${version.tomcat}/webapps/docs" />
                    <delete dir="target/server/apache-tomcat-${version.tomcat}/webapps/examples" />
                    <delete dir="target/server/apache-tomcat-${version.tomcat}/webapps/ROOT" />
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>engine-integration-jakarta</id>
      <dependencies>
        <dependency>
          <groupId>org.jboss.weld.servlet</groupId>
          <artifactId>weld-servlet-shaded</artifactId>
          <version>5.1.2.Final</version>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
  <description>${project.name}</description>
</project>
